@mixin generate-circle($color) {
  & .circle-inner {
    background-color: $color;

    &:after {
      background: $color;
    }
  }
}

.circle {
  border-radius: 100%;
  position: relative;
  max-width: 200px;
  margin: 0 auto 45px;
  z-index: 2;

  &:before {
    content: '';
    position: relative;
    display: block;
    width: 100%;
    padding-bottom: 100%;
  }

  &:after{
    opacity: 0;
    transition: .3s opacity ease-in-out;
  }

  &-inner {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: $white;
    border-radius: 100%;
    transition: .3s background ease-in-out;

    &:before {
      content: '';
      position: absolute;
      background-image: url("../images/circle.svg");
      background-repeat: no-repeat;
      background-size: contain;
      top: 10px;
      left: 10px;
      right: 10px;
      bottom: 10px;
      opacity: .5;
    }

    &:after {
      content: '';
      position: absolute;
      left: 50%;
      top: 100%;
      width: 70%;
      padding-bottom: 25%;
      transform: translate(-50%, -65%) translateZ(-1px);
      filter: blur(10px);
      border-radius: 100%;
      opacity: .3;
      z-index: -1;
    }

    img {
      max-width: 46%;
      max-height: 28%;
      height: auto;
    }

    .icon {
      font-size: 40px;
    }

    p {
      margin: 0;
    }
  }

  &-title {
    font-weight: 600;
    display: block;
    @include interpolate(font-size, lg, xl, 14px, 22px);
  }

  &-label {
    color: $text;
    font-size: 16px;
    text-transform: uppercase;
    margin: 0 0 10px;
    font-family: $eurostile;
    font-weight: 600;
    letter-spacing: -.5px;
  }

  &.active {
    .circle-inner:before {
      animation: 60s rotate linear infinite;
    }
  }

  &-warning {
    @include generate-circle($warning);
  }

  &-info {
    @include generate-circle($info);
  }

  &.inactive {
    @include generate-circle($inactive);
  }

  &.state-one {
    @include generate-circle(lighten($info, 20%));

    .circle-inner{
      background: linear-gradient(to top, lighten($info, 20%) 0, #cfd9df 90%);
    }

    & + div .btn.inactive {
      background: lighten($info, 20%);
      border-color: lighten($info, 20%);
    }
  }

  &.state-all {
    @include generate-circle($info);

    & + div .btn.inactive {
      background: $info;
      border-color: $info;
    }
  }

  &.circle-state + div .btn {
    pointer-events: none;
  }
}

.circle-wrapper {
  padding: 0 20px;

  &:not(:last-child) {
    position: relative;
    margin-bottom: 50px;

    &:after {
      content: '';
      display: block;
      width: 0;
      height: 0;
      position: absolute;
      right: 0;
      top: 30%;
      transform: translate(50%, -50%);
      border-top: 13px solid transparent;
      border-bottom: 13px solid transparent;
      border-left: 25px solid $inactive;
      border-right: 0;
      @include interpolate(top, md, 1100px, 65px, 100px);

      @include media-breakpoint-down(sm) {
        top: 100%;
        right: 50%;
        border-left: 13px solid transparent;
        border-right: 13px solid transparent;
        border-bottom: 0;
        border-top: 25px solid $inactive;
        transform: translate(50%, 10px);
      }
    }
  }

  .btn {
    width: 100%;
    max-width: 160px;
  }
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
