$sidebar-animation-duration: .3s;
$sidebar-collapse-breakpoint: sm;

// collapse / expand state + hover
@mixin sidebar-expand($side) {
  .menu-expanded .sidebar {
    $inner-padding: $nav-link-size / 1.5 !default;
    @if ($side == right) {
      $inner-padding: -#{$nav-link-size / 1.5};
    }

    min-width: var(--sidebar-collapse-width);

    &-#{$side} ~ main {
      padding-#{$side}: var(--sidebar-collapse-width);
    }

    &-inner {
      transform: translate($inner-padding, 0);

      a span:not(.icon) {
        opacity: 0;
        transform: translate(#{$inner-padding * -1}, 0);
      }
    }
  }
}

@mixin sidebar-collapse($side) {
  .menu-collapsed .sidebar {
    min-width: var(--sidebar-width);

    &-inner {
      max-width: var(--sidebar-width);
      transform: translate(0, 0);

      a span:not(.icon) {
        opacity: 1;
        transform: translate(0, 0);
      }
    }
  }
}

// open / close state
@mixin sidebar-open($side: right) {
  $main-padding: var(--sidebar-width) !default;
  @if ($side == right) {
    $main-padding: var(--n-sidebar-width);
  }


  @include media-breakpoint-down(sm) {
    .menu-open {
      position: fixed;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      overflow: hidden;

      .sidebar-#{$side} {
        transform: translate(0, 0);

        & ~ main {
          transform: translate($main-padding, 0);
          padding: 0;
          @include backdrop-active();
        }
      }
    }
  }
}

@mixin sidebar-close($side: right) {
  $sign: '-' !default;
  @if ($side == right) {
    $sign: '';
  }

  @include media-breakpoint-down(sm) {
    .menu-close {
      .sidebar-#{$side} {
        transform: translate(#{$sign}100%, 0);

        & ~ main {
          transform: translate(0, 0);
          padding: 0;
        }
      }
    }
  }
}

// right/ left option
@mixin sidebar-side($side, $size, $position) {
  $sign: '-' !default;
  @if ($side == right) {
    $sign: '';
  }

  .sidebar-#{$side} {
    #{$side}: 0;

    & ~ main {
      @if($position != relative) {
        padding-#{$side}: $size;
      }
      @else {
        transform: translate(#{$sign}$size, 0);
      }
    }
  }
}

// relative / fixed state
@mixin sidebar-position($position) {
  .sidebar-#{$position} {
    @if ($position == absolute or $position == relative) {
      @include media-breakpoint-up(md) {
        position: $position;
      }

      @include media-breakpoint-down(sm) {
        position: fixed;
      }
    }

    @if ($position == fixed) {
      position: $position;
    }
  }
}

// common sidebar styles
@mixin sidebar($width: 340px) {
  .sidebar {
    top: 0;
    bottom: 0;
    overflow: hidden;
    width: 0;
    min-width: $width;
    will-change: min-width, transform;
    transition: $sidebar-animation-duration max-width ease-in-out, $sidebar-animation-duration transform ease-in-out;
    background: transparent;
    z-index: $zindex-fixed + 1;

    & ~ main {
      transition: $sidebar-animation-duration padding ease-in-out, $sidebar-animation-duration transform ease-in-out;
    }

    &-inner {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      width: $width;
      min-width: $width;
      white-space: nowrap;
      @extend .scrollable;
      background-color: $blue-900;
      background-image: linear-gradient(to bottom, darken($blue-900, 15%) 0%, darken($blue-900, 15%) 300px, $blue-900 300.0001px, $blue-900 100%);
    }
  }
}

// one place to generate sidebar
@mixin generate-sidebar($position: absolute) {
  @include sidebar(var(--sidebar-width));
  @include sidebar-position($position);
  @include sidebar-side(left, var(--sidebar-width), $position);
  @include sidebar-side(right, var(--sidebar-width), $position);

  @include sidebar-close(left);
  @include sidebar-close(right);
  @include sidebar-open(left);
  @include sidebar-open(right);
}

// sidebar generation
@include generate-sidebar(relative);
